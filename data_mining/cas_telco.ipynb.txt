{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "seminar_march_20.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "YaWVS38o9FOC"
      },
      "source": [
        "Кейс \"отток клиентов компании Telco\""
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YMDcTQ7p86uN"
      },
      "source": [
        "# ссылка на базу данных\n",
        "link_data = 'https://raw.githubusercontent.com/UrmatDzhunkeev/m_207/main/telco_churn.csv'"
      ],
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YT_g-QuS86b5"
      },
      "source": [
        "# загрузка библиотек\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "%matplotlib inline"
      ],
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OIsM6Zth9XQL"
      },
      "source": [
        "# загружаем базу данных\n",
        "telco = pd.read_csv(link_data)"
      ],
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RKExTQ5q9XLq",
        "outputId": "8acbc419-d3ed-4c8a-b585-8902f960d366"
      },
      "source": [
        "telco.info()"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 7043 entries, 0 to 7042\n",
            "Data columns (total 18 columns):\n",
            " #   Column            Non-Null Count  Dtype  \n",
            "---  ------            --------------  -----  \n",
            " 0   gender            7043 non-null   object \n",
            " 1   SeniorCitizen     7043 non-null   int64  \n",
            " 2   Partner           7043 non-null   object \n",
            " 3   Dependents        7043 non-null   object \n",
            " 4   tenure            7043 non-null   int64  \n",
            " 5   PhoneService      7043 non-null   object \n",
            " 6   InternetService   7043 non-null   object \n",
            " 7   OnlineSecurity    7043 non-null   object \n",
            " 8   OnlineBackup      7043 non-null   object \n",
            " 9   DeviceProtection  7043 non-null   object \n",
            " 10  TechSupport       7043 non-null   object \n",
            " 11  StreamingTV       7043 non-null   object \n",
            " 12  StreamingMovies   7043 non-null   object \n",
            " 13  Contract          7043 non-null   object \n",
            " 14  PaperlessBilling  7043 non-null   object \n",
            " 15  PaymentMethod     7043 non-null   object \n",
            " 16  MonthlyCharges    7043 non-null   float64\n",
            " 17  Churn             7043 non-null   object \n",
            "dtypes: float64(1), int64(2), object(15)\n",
            "memory usage: 990.5+ KB\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "N_LKwHCT-eG7"
      },
      "source": [
        "#### Сводные таблицы"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 168
        },
        "id": "p29VRGdD86Zd",
        "outputId": "0d999b9f-19db-4120-b15d-770c9734c7cf"
      },
      "source": [
        "# построение сводных таблиц\n",
        "# агрегирующие функции: среднее значение, медиана, стандартное отклонение\n",
        "telco.pivot_table(values='MonthlyCharges', \n",
        "                  # первый разрез: гендерная принадлежность\n",
        "                  index='gender', \n",
        "                  # агрегирующие функции\n",
        "                  aggfunc=['mean','median','std'],\n",
        "                  # второй разрез: наличие / отсутствие детей\n",
        "                  columns=['Dependents'])"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr:last-of-type th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th colspan=\"2\" halign=\"left\">mean</th>\n",
              "      <th colspan=\"2\" halign=\"left\">median</th>\n",
              "      <th colspan=\"2\" halign=\"left\">std</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Dependents</th>\n",
              "      <th>No</th>\n",
              "      <th>Yes</th>\n",
              "      <th>No</th>\n",
              "      <th>Yes</th>\n",
              "      <th>No</th>\n",
              "      <th>Yes</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>gender</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Female</th>\n",
              "      <td>67.622947</td>\n",
              "      <td>59.416294</td>\n",
              "      <td>74.375</td>\n",
              "      <td>61.175</td>\n",
              "      <td>29.161891</td>\n",
              "      <td>31.377721</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Male</th>\n",
              "      <td>66.385928</td>\n",
              "      <td>59.622736</td>\n",
              "      <td>73.000</td>\n",
              "      <td>60.950</td>\n",
              "      <td>29.379691</td>\n",
              "      <td>31.243550</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                 mean             median                std           \n",
              "Dependents         No        Yes      No     Yes         No        Yes\n",
              "gender                                                                \n",
              "Female      67.622947  59.416294  74.375  61.175  29.161891  31.377721\n",
              "Male        66.385928  59.622736  73.000  60.950  29.379691  31.243550"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 166
        },
        "id": "HX5NGI2M86QL",
        "outputId": "dafdd163-07dd-4c3b-da08-18106e3e03ab"
      },
      "source": [
        "telco.pivot_table(values='MonthlyCharges',\n",
        "                  index='Dependents', aggfunc=['mean','median','std'])"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr:last-of-type th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>mean</th>\n",
              "      <th>median</th>\n",
              "      <th>std</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>MonthlyCharges</th>\n",
              "      <th>MonthlyCharges</th>\n",
              "      <th>MonthlyCharges</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Dependents</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>No</th>\n",
              "      <td>67.002808</td>\n",
              "      <td>73.900</td>\n",
              "      <td>29.274849</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Yes</th>\n",
              "      <td>59.522156</td>\n",
              "      <td>60.975</td>\n",
              "      <td>31.301735</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                     mean         median            std\n",
              "           MonthlyCharges MonthlyCharges MonthlyCharges\n",
              "Dependents                                             \n",
              "No              67.002808         73.900      29.274849\n",
              "Yes             59.522156         60.975      31.301735"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "V5yOAE9e_nB8"
      },
      "source": [
        "# построим / определим функцию, которая строит сводные таблицы\n",
        "# column_feat = дополнительный столбец\n",
        "\n",
        "def pvt_tbl(dataframe, index_col, value_col, column_feat=None, aggfunc=['mean']):\n",
        "  pivot_table = dataframe.pivot_table(values=value_col, index=index_col, \n",
        "                                      columns=column_feat,\n",
        "                                      aggfunc=aggfunc)\n",
        "  return pivot_table"
      ],
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 136
        },
        "id": "lXEDllWCW69s",
        "outputId": "67ff2691-1471-4de5-cadb-d984ec4b8809"
      },
      "source": [
        "telco.pivot_table(values='MonthlyCharges', index='SeniorCitizen')"
      ],
      "execution_count": 125,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>MonthlyCharges</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SeniorCitizen</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>61.847441</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>79.820359</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "               MonthlyCharges\n",
              "SeniorCitizen                \n",
              "0                   61.847441\n",
              "1                   79.820359"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 125
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_0BmMRHSW63P"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 166
        },
        "id": "Qw9p2hY-_m_K",
        "outputId": "d9d1e6c0-e7dd-4cb7-8522-717f808e81db"
      },
      "source": [
        "# протестируем нашу функцию в разрезе гендерной принадлежности и \n",
        "# наличия / отсутствия детей\n",
        "pvt_tbl(telco, index_col='gender', value_col='MonthlyCharges',\n",
        "        column_feat=['Dependents'], aggfunc=['mean','median','std'])"
      ],
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr:last-of-type th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th colspan=\"2\" halign=\"left\">mean</th>\n",
              "      <th colspan=\"2\" halign=\"left\">median</th>\n",
              "      <th colspan=\"2\" halign=\"left\">std</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Dependents</th>\n",
              "      <th>No</th>\n",
              "      <th>Yes</th>\n",
              "      <th>No</th>\n",
              "      <th>Yes</th>\n",
              "      <th>No</th>\n",
              "      <th>Yes</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>gender</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Female</th>\n",
              "      <td>67.622947</td>\n",
              "      <td>59.416294</td>\n",
              "      <td>74.375</td>\n",
              "      <td>61.175</td>\n",
              "      <td>29.161891</td>\n",
              "      <td>31.377721</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Male</th>\n",
              "      <td>66.385928</td>\n",
              "      <td>59.622736</td>\n",
              "      <td>73.000</td>\n",
              "      <td>60.950</td>\n",
              "      <td>29.379691</td>\n",
              "      <td>31.243550</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                 mean             median                std           \n",
              "Dependents         No        Yes      No     Yes         No        Yes\n",
              "gender                                                                \n",
              "Female      67.622947  59.416294  74.375  61.175  29.161891  31.377721\n",
              "Male        66.385928  59.622736  73.000  60.950  29.379691  31.243550"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uXtopGpAAqOo",
        "outputId": "d7674327-9566-4148-9e81-9f530de824a8"
      },
      "source": [
        "# через цикл автоматизируем построение сводных таблиц\n",
        "for feature in ['gender','Dependents','SeniorCitizen','Partner']:\n",
        "  print('*'*20)\n",
        "  # отображаем сводные таблицы\n",
        "  print(pvt_tbl(telco, index_col=feature, value_col='MonthlyCharges'))"
      ],
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "********************\n",
            "                 mean\n",
            "       MonthlyCharges\n",
            "gender               \n",
            "Female      65.204243\n",
            "Male        64.327482\n",
            "********************\n",
            "                     mean\n",
            "           MonthlyCharges\n",
            "Dependents               \n",
            "No              67.002808\n",
            "Yes             59.522156\n",
            "********************\n",
            "                        mean\n",
            "              MonthlyCharges\n",
            "SeniorCitizen               \n",
            "0                  61.847441\n",
            "1                  79.820359\n",
            "********************\n",
            "                  mean\n",
            "        MonthlyCharges\n",
            "Partner               \n",
            "No           61.945001\n",
            "Yes          67.776264\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7w1TtOHcBSbK"
      },
      "source": [
        "- нет значимых отличий от клиентов мужского и женского пола\n",
        "- клиенты без детей больше выплачивают на 8 долларов\n",
        "- клиенты пенсионного возраста на 18 долларов ежемесячно выплачивают больше чем более молодые клиенты\n",
        "- клиенты с супругой / супругом больше выплачивают на 6 долларов по сравнению с одиноким людьми"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "q7xByaRQV_fR"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "YM3pwSOMCZhL"
      },
      "source": [
        "#### Столбиковые диаграммы"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 309
        },
        "id": "FgcEi3nGChQk",
        "outputId": "fc681e1b-f154-4919-a3e1-5747c08d2f28"
      },
      "source": [
        "# процентное соотношение мужчин и женщин\n",
        "telco['gender'].value_counts(normalize=True).plot(kind='bar')"
      ],
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f5ed7437dd0>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 21
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 289
        },
        "id": "SZbOkNJKChN0",
        "outputId": "fbf0e37b-db9a-4d39-ff0c-2b2d22e4418c"
      },
      "source": [
        "# процентное соотношение клиентов, которые имеют / не имеют детей\n",
        "telco['Dependents'].value_counts(normalize=True).plot(kind='bar')"
      ],
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f5ed5442b90>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 22
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eRTps_sZAqLg"
      },
      "source": [
        "# построим / определим функцию, которая строит столбиковые диаграммы\n",
        "# процентного соотношения признаков\n",
        "def bar_vl_cnt(dataframe, value_col):\n",
        "  dataframe[value_col].value_counts(normalize=True).plot(kind='bar')"
      ],
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 271
        },
        "id": "8_OfSE0u_m8V",
        "outputId": "a4cd2d3a-01ba-4c7f-b27a-5f2edb521556"
      },
      "source": [
        "bar_vl_cnt(telco,'Dependents')"
      ],
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "YKQGTgMvDIRr",
        "outputId": "7e6c98d9-5fc4-42b7-958b-1794547b3e50"
      },
      "source": [
        "# через цикл автоматизируем построение столбиковых диаграмм\n",
        "for feature in ['gender','Dependents','SeniorCitizen','Partner']:\n",
        "  bar_vl_cnt(telco, feature)\n",
        "  plt.title(feature)\n",
        "  plt.show()"
      ],
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXQAAAEiCAYAAADptCm5AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAQb0lEQVR4nO3df6zdd13H8eeLNh3jhyDsItJ2a4E6U2ABvHTjH/k1Y5dpqzJNa0g2HRYSC0PEMKIpZAjyK2CINazKAE1YN4jgRcoa5YcGgdk7aGBlVq7NRltAL2wMBNat29s/zrdwdrntPV3Pvaf30+fjn53vj3PO+27dM99+z/d8b6oKSdLi97BRDyBJGg6DLkmNMOiS1AiDLkmNMOiS1AiDLkmNMOjSSUhSSZ466jmk2Rh0SWqEQZcWQJKlo55B7TPoakKSZyf5UpLvJ/lQkhuS/Hm37deS7E3y3SSfS3JB3/NuT/KaJF9Ocnf3vIf3bf+TJN9M8o0kvz/jPc9K8o4kX0/yP0nek+TsbtvzkxxK8tok3wLet0D/KnQGM+ha9JIsAz4CvB94HHA98JvdtmcB1wEvAx4PXAtMJDmr7yV+B1gPrAYuAK7onrseeA3wK8Aa4OIZb/0W4BeAZwJPBZYD2/q2P7Gb5zxgyxB+VOmEDLpacBGwFHh3Vd1XVf8A/Ee3bQtwbVXdXFX3V9UHgCPdc455d1V9o6ruBD5GL9DQC/37qurWqvoB8IZjT0iS7rX/qKrurKrvA28GNvW97gPA66vqSFX9aNg/tDST5/XUgicBh+vBd5o72P3zPODyJK/o27ase84x3+p7/MO+bU8Cbunbdkff4zHgEcAtvbYDEGBJ3z7TVXXPSfwc0ikx6GrBN4HlSdIX9ZXAf9ML+5uq6k0P8XVX9i2f2/f428CPgKdV1eHjPN9bmWpBecpFLfg8cD+wNcnSJBuBdd22vwFenuTC9DwyyaVJHj3A694IXJFkbZJHAK8/tqGqHuhe+11JngCQZHmSXx3mDyadDIOuRa+q7gV+C7gS+C7wEuCfgCNVNQn8AfBXwF3AFN2HngO87ieAvwQ+1T3vUzN2eW23/gtJvgf8C3D+Kf440kMWf8GFWpTkZuA9VeXlgjpjeISuJiR5XpIndqdcLqd3+eFNo55LWkh+KKpWnE/vnPcjgQPAZVX1zdGOJC0sT7lIUiM85SJJjRjZKZdzzjmnVq1aNaq3l6RF6ZZbbvl2VY3Ntm1kQV+1ahWTk5OjentJWpSS3HG8bZ5ykaRGGHRJaoRBl6RGGHRJaoRBl6RGGHRJaoRBl6RGGHRJasRAQU+yPsn+JFNJrp5l+xVJprvfrL43yUuHP6ok6UTm/KZokiXAdnq/+fwQsCfJRFV9dcauN1TV1nmYcaRWXf3xUY/QlNvfcumoR5CaNcgR+jpgqqoOdL8ZZiewcX7HkiSdrEGCvpyf/AZ16B2lL59lvxcn+XKSDydZOct2kmxJMplkcnp6+iGMK0k6nmHdnOtjwPVVdSTJy4APAC+cuVNV7QB2AIyPj3sjdukUeDpwuFo4HTjIEfphoP+Ie0W37seq6jtVdaRb/Fvgl4YzniRpUIMEfQ+wJsnqJMuATcBE/w5Jfr5vcQNw2/BGlCQNYs5TLlV1NMlWYDewBLiuqvYluQaYrKoJ4JVJNgBHgTuBK+ZxZknSLAY6h15Vu4BdM9Zt63v8OuB1wx1NknQy/KaoJDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwYKepL1SfYnmUpy9Qn2e3GSSjI+vBElSYOYM+hJlgDbgUuAtcDmJGtn2e/RwFXAzcMeUpI0t0GO0NcBU1V1oKruBXYCG2fZ743AW4F7hjifJGlAgwR9OXCwb/lQt+7HkjwbWFlVHz/RCyXZkmQyyeT09PRJDytJOr5T/lA0ycOAdwJ/PNe+VbWjqsaranxsbOxU31qS1GeQoB8GVvYtr+jWHfNo4OnAZ5LcDlwETPjBqCQtrEGCvgdYk2R1kmXAJmDi2MaquruqzqmqVVW1CvgCsKGqJudlYknSrOYMelUdBbYCu4HbgBural+Sa5JsmO8BJUmDWTrITlW1C9g1Y9224+z7/FMfS5J0svymqCQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMGCnqS9Un2J5lKcvUs21+e5CtJ9ib5bJK1wx9VknQicwY9yRJgO3AJsBbYPEuwP1hVz6iqZwJvA9459EklSSc0yBH6OmCqqg5U1b3ATmBj/w5V9b2+xUcCNbwRJUmDWDrAPsuBg33Lh4ALZ+6U5A+BVwPLgBfO9kJJtgBbAM4999yTnVWSdAJD+1C0qrZX1VOA1wJ/dpx9dlTVeFWNj42NDeutJUkMFvTDwMq+5RXduuPZCfzGqQwlSTp5gwR9D7Amyeoky4BNwET/DknW9C1eCnxteCNKkgYx5zn0qjqaZCuwG1gCXFdV+5JcA0xW1QSwNcnFwH3AXcDl8zm0JOmnDfKhKFW1C9g1Y922vsdXDXkuSdJJ8puiktQIgy5JjTDoktQIgy5JjTDoktQIgy5JjTDoktQIgy5JjTDoktQIgy5JjTDoktQIgy5JjTDoktQIgy5JjTDoktQIgy5JjTDoktQIgy5JjTDoktQIgy5JjTDoktQIgy5JjTDoktQIgy5JjTDoktQIgy5JjTDoktQIgy5JjTDoktQIgy5JjTDoktQIgy5JjRgo6EnWJ9mfZCrJ1bNsf3WSryb5cpJPJjlv+KNKkk5kzqAnWQJsBy4B1gKbk6ydsduXgPGqugD4MPC2YQ8qSTqxQY7Q1wFTVXWgqu4FdgIb+3eoqk9X1Q+7xS8AK4Y7piRpLoMEfTlwsG/5ULfueK4EPjHbhiRbkkwmmZyenh58SknSnIb6oWiSlwDjwNtn215VO6pqvKrGx8bGhvnWknTGWzrAPoeBlX3LK7p1D5LkYuBPgedV1ZHhjCdJGtQgR+h7gDVJVidZBmwCJvp3SPIs4FpgQ1X97/DHlCTNZc6gV9VRYCuwG7gNuLGq9iW5JsmGbre3A48CPpRkb5KJ47ycJGmeDHLKharaBeyasW5b3+OLhzyXJOkk+U1RSWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRgwU9CTrk+xPMpXk6lm2/3KSLyY5muSy4Y8pSZrLnEFPsgTYDlwCrAU2J1k7Y7evA1cAHxz2gJKkwSwdYJ91wFRVHQBIshPYCHz12A5VdXu37YF5mFGSNIBBTrksBw72LR/q1p20JFuSTCaZnJ6efigvIUk6jgX9ULSqdlTVeFWNj42NLeRbS1LzBgn6YWBl3/KKbp0k6TQySND3AGuSrE6yDNgETMzvWJKkkzVn0KvqKLAV2A3cBtxYVfuSXJNkA0CS5yQ5BPw2cG2SffM5tCTppw1ylQtVtQvYNWPdtr7He+idipEkjYjfFJWkRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWqEQZekRhh0SWrEQEFPsj7J/iRTSa6eZftZSW7ott+cZNWwB5UkndicQU+yBNgOXAKsBTYnWTtjtyuBu6rqqcC7gLcOe1BJ0okNcoS+DpiqqgNVdS+wE9g4Y5+NwAe6xx8GXpQkwxtTkjSXpQPssxw42Ld8CLjwePtU1dEkdwOPB77dv1OSLcCWbvH/kux/KENrVucw49/36Sj+3e1M5J/N4TrveBsGCfrQVNUOYMdCvueZIslkVY2Peg5pJv9sLpxBTrkcBlb2La/o1s26T5KlwGOA7wxjQEnSYAYJ+h5gTZLVSZYBm4CJGftMAJd3jy8DPlVVNbwxJUlzmfOUS3dOfCuwG1gCXFdV+5JcA0xW1QTwXuDvk0wBd9KLvhaWp7J0uvLP5gKJB9KS1Aa/KSpJjTDoktQIgy5JjTDoi1ySs5OcP+o5JI2eQV/Ekvw6sBe4qVt+ZpKZl5RKCy49L0myrVs+N8m6Uc/VOoO+uL2B3r12vgtQVXuB1aMcSOr8NfBcYHO3/H16N/nTPFrQr/5r6O6rqrtn3AfN61B1Oriwqp6d5EsAVXVX98VEzSODvrjtS/K7wJIka4BXAp8b8UwSwH3drbcLIMkY8MBoR2qfp1wWt1cATwOOANcD3wNeNdKJpJ53Ax8BnpDkTcBngTePdqT2+U1RSfMiyS8CLwICfLKqbhvxSM0z6ItQko9xgnPlVbVhAceRfizJ4060varuXKhZzkSeQ1+c3jHqAaTjuIXewUb/J/XHlgt48iiGOlN4hC5JjfAIfRHrrmz5C3q/vPvhx9ZXlUdBGrkkPwus4cF/Nv9tdBO1z6Avbu8DXg+8C3gB8Ht45ZJOA0leClxF7zec7QUuAj4PvHCUc7XO//kXt7Or6pP0Tp3dUVVvAC4d8UwS9GL+HOCOqnoB8Cy6bzRr/niEvrgdSfIw4Gvdb5U6DDxqxDNJAPdU1T1JSHJWVf2nN5GbfwZ9cbsKeAS9b4i+kd5fZy8/4TOkhXEoyWOBjwL/nOQu4I4Rz9Q8r3KRNK+SPA94DHBTVd076nlaZtAXoblukesXi3Q66K5yWUnfmYCq+uLoJmqfp1wWp+cCB+ndv+VmHvwlDmnkkrwRuAI4wE9uylV4lcu88gh9EeruYvcr9O41fQHwceD6qto30sGkTpL9wDM8xbKwvGxxEaqq+6vqpqq6nN71vVPAZ7orXaTTwa3AY0c9xJnGI/RFKslZ9K453wysAiaA66rq8CjnkgCSjAP/SC/sR46t9/Od+WXQF6Ekfwc8HdgF7KyqW0c8kvQgSfYB1wJfoe8XW1TVv45sqDOAQV+EkjwA/KBb7P8PGKCq6mcWfirpJ5LsqarnjHqOM41BlzR0Sd5J71TLBA8+5eJli/PIoEsauiSfnmV1VZWXLc4jgy5JjfCyRUlDl+Tnkrw3ySe65bVJrhz1XK0z6JLmw/uB3cCTuuX/Al41smnOEAZd0nw4p6pupLtksaqOAvePdqT2GXRJ8+EHSR5Pd1ltkouAu0c7Uvu8OZek+fBqepcsPiXJvwNjwGWjHal9XuUiaWiSnFtVX+8eLwXOp/eFt/1Vdd9IhzsDeMpF0jB9tO/xDVW1r6puNeYLw6BLGqb+e/M/eWRTnKEMuqRhquM81gLwHLqkoUlyP70bxwU4G/jhsU1447h5Z9AlqRGecpGkRhh0SWqEQZekRhh0SWrE/wOlcPJeOybeEAAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "73MmgpZYDw8_"
      },
      "source": [
        "- 70 процентов - не имеют детей\n",
        "- 18 процентов - пенсионеры\n",
        "- поровну - наличие партнера"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 358
        },
        "id": "nzDeaxcqDIO4",
        "outputId": "f7d3709c-6b95-4fdc-86c1-36ff99ad0eee"
      },
      "source": [
        "plt.figure(figsize=(12,6))\n",
        "sns.boxplot(data=telco, x='Dependents',y = 'MonthlyCharges')"
      ],
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f5ed4f12750>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 28
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "pPgTC4WzGJoK"
      },
      "source": [
        "Interquartile range (IQR): 75 quantile - 25 quantile\n",
        "1.5 * Q1 (25 quantile);\n",
        "1.5 * Q3 (75 quantile)"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qHAO_wJa86Nt"
      },
      "source": [
        "# определим функцию, которая строит коробчатые диаграммы\n",
        "def sns_bxptl(dataframe, x_col, y_col):\n",
        "  # задаем размер диаграммы \n",
        "  plt.figure(figsize=(12,6))\n",
        "  # строим коробчатую диаграмму\n",
        "  sns.boxplot(data=dataframe, x=x_col, y=y_col)"
      ],
      "execution_count": 29,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 340
        },
        "id": "3sn-SQD981BA",
        "outputId": "d68bb604-bca9-4190-ace2-7c00b594f926"
      },
      "source": [
        "# \n",
        "sns_bxptl(telco, x_col='Dependents',y_col='MonthlyCharges')"
      ],
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "oI1AQZAmHE1c",
        "outputId": "d9a03268-2d43-4ed6-ac44-455de699d5d6"
      },
      "source": [
        "# через цикл автоматизируем построение коробчатых диаграмм \n",
        "for feature in ['gender','Dependents','SeniorCitizen','Partner']:\n",
        "  sns_bxptl(dataframe=telco, x_col=feature, y_col='MonthlyCharges')\n",
        "  # plt.title(feature)\n",
        "  # отображаем очередной график\n",
        "  plt.show()"
      ],
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 335
        },
        "id": "9PK9dE-cHEzV",
        "outputId": "70561a65-11a5-4bfa-a262-4011ec21e59a"
      },
      "source": [
        "telco.groupby('Dependents')['MonthlyCharges'].plot(kind='hist', bins=30)"
      ],
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Dependents\n",
              "No     AxesSubplot(0.125,0.125;0.775x0.755)\n",
              "Yes    AxesSubplot(0.125,0.125;0.775x0.755)\n",
              "Name: MonthlyCharges, dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 37
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 335
        },
        "id": "mkeqV1rpHExN",
        "outputId": "3bcd9900-e9b7-4db2-d566-3863d3e3994c"
      },
      "source": [
        "telco.groupby('Dependents')['MonthlyCharges'].plot(kind='hist', bins=10)"
      ],
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Dependents\n",
              "No     AxesSubplot(0.125,0.125;0.775x0.755)\n",
              "Yes    AxesSubplot(0.125,0.125;0.775x0.755)\n",
              "Name: MonthlyCharges, dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 38
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 394
        },
        "id": "vQGrPSIgHEvD",
        "outputId": "fce6dc01-56cb-4fac-a202-dd305de6ccae"
      },
      "source": [
        "plt.figure(figsize=(12,6))\n",
        "telco.groupby('Dependents')['MonthlyCharges'].plot(kind='hist',\n",
        "                                                   histtype='step', linewidth=5, legend=True,\n",
        "                                                   density=True)"
      ],
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Dependents\n",
              "No     AxesSubplot(0.125,0.125;0.775x0.755)\n",
              "Yes    AxesSubplot(0.125,0.125;0.775x0.755)\n",
              "Name: MonthlyCharges, dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 42
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KCsRLetYHEso"
      },
      "source": [
        "# определим функцию, которая строим гистограммы. по умолчанию = простые гистограммы\n",
        "def plot_hist(dataframe, group_col, value_col, dnst=False):\n",
        "  plt.figure(figsize=(12,6))\n",
        "  \n",
        "  dataframe.groupby(group_col)[value_col].plot(kind='hist',\n",
        "                                               # задаем тип гистограммы\n",
        "                                               density=dnst, \n",
        "                                               # задаем макет гистограммы\n",
        "                                               histtype='step', linewidth=5,\n",
        "                                               # отображение легенды\n",
        "                                                legend=True)"
      ],
      "execution_count": 51,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 323
        },
        "id": "epI_YuKIHEpu",
        "outputId": "d99880d2-f4b5-47a0-fc85-7161f7ca73f0"
      },
      "source": [
        "# протестируем на примере наличия / отсутствия детей\n",
        "plot_hist(telco, group_col='Dependents', value_col='MonthlyCharges', dnst=True)"
      ],
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 978
        },
        "id": "f06Lqt9CKORd",
        "outputId": "abb6804b-ebdd-4b25-9fbe-78effe65f2dc"
      },
      "source": [
        "# через цикл автоматизируем построение плотностных гистограмм\n",
        "for feature in ['gender','Dependents','Partner']:\n",
        "  # строим плотностные гистограммы\n",
        "  plot_hist(telco, group_col=feature, value_col='MonthlyCharges', dnst=True)\n",
        "  # задаем заголовок диаграмм\n",
        "  plt.title(feature)\n",
        "  # отображаем очередную диаграмму\n",
        "  plt.show()"
      ],
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ozjj2NqGMHeb"
      },
      "source": [
        "#### Тепловая диаграмма"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 136
        },
        "id": "ZMyWlNgJKOOM",
        "outputId": "a4e1227b-cc4b-4750-8c75-dec1a2042508"
      },
      "source": [
        "telco.corr()"
      ],
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>SeniorCitizen</th>\n",
              "      <th>tenure</th>\n",
              "      <th>MonthlyCharges</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>SeniorCitizen</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.016567</td>\n",
              "      <td>0.220173</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>tenure</th>\n",
              "      <td>0.016567</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.247900</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MonthlyCharges</th>\n",
              "      <td>0.220173</td>\n",
              "      <td>0.247900</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                SeniorCitizen    tenure  MonthlyCharges\n",
              "SeniorCitizen        1.000000  0.016567        0.220173\n",
              "tenure               0.016567  1.000000        0.247900\n",
              "MonthlyCharges       0.220173  0.247900        1.000000"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KAjaN3XIKOLk"
      },
      "source": [
        "# from object to numerical format"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "r4j4fYViMW4O",
        "outputId": "59af44b2-56f1-4ae9-fc87-55cab0bff745"
      },
      "source": [
        "telco.head()"
      ],
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>gender</th>\n",
              "      <th>SeniorCitizen</th>\n",
              "      <th>Partner</th>\n",
              "      <th>Dependents</th>\n",
              "      <th>tenure</th>\n",
              "      <th>PhoneService</th>\n",
              "      <th>InternetService</th>\n",
              "      <th>OnlineSecurity</th>\n",
              "      <th>OnlineBackup</th>\n",
              "      <th>DeviceProtection</th>\n",
              "      <th>TechSupport</th>\n",
              "      <th>StreamingTV</th>\n",
              "      <th>StreamingMovies</th>\n",
              "      <th>Contract</th>\n",
              "      <th>PaperlessBilling</th>\n",
              "      <th>PaymentMethod</th>\n",
              "      <th>MonthlyCharges</th>\n",
              "      <th>Churn</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Female</td>\n",
              "      <td>0</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "      <td>1</td>\n",
              "      <td>No</td>\n",
              "      <td>DSL</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Month-to-month</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Electronic check</td>\n",
              "      <td>29.85</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Male</td>\n",
              "      <td>0</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>34</td>\n",
              "      <td>Yes</td>\n",
              "      <td>DSL</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>One year</td>\n",
              "      <td>No</td>\n",
              "      <td>Mailed check</td>\n",
              "      <td>56.95</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Male</td>\n",
              "      <td>0</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>2</td>\n",
              "      <td>Yes</td>\n",
              "      <td>DSL</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Month-to-month</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Mailed check</td>\n",
              "      <td>53.85</td>\n",
              "      <td>Yes</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Male</td>\n",
              "      <td>0</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>45</td>\n",
              "      <td>No</td>\n",
              "      <td>DSL</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>One year</td>\n",
              "      <td>No</td>\n",
              "      <td>Bank transfer (automatic)</td>\n",
              "      <td>42.30</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Female</td>\n",
              "      <td>0</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>2</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Fiber optic</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Month-to-month</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Electronic check</td>\n",
              "      <td>70.70</td>\n",
              "      <td>Yes</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   gender  SeniorCitizen  ... MonthlyCharges Churn\n",
              "0  Female              0  ...          29.85    No\n",
              "1    Male              0  ...          56.95    No\n",
              "2    Male              0  ...          53.85   Yes\n",
              "3    Male              0  ...          42.30    No\n",
              "4  Female              0  ...          70.70   Yes\n",
              "\n",
              "[5 rows x 18 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "id": "_fXnXLGJMW1g",
        "outputId": "14574011-3beb-4891-ecd7-c33cfbd4344c"
      },
      "source": [
        "# позволяет решить проблему мультиколлинеарность = линейная связь переменных\n",
        "# затрудняет оценку эконометрических моделей\n",
        "telco_dmms = pd.get_dummies(telco, drop_first=True)\n",
        "telco_dmms"
      ],
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>SeniorCitizen</th>\n",
              "      <th>tenure</th>\n",
              "      <th>MonthlyCharges</th>\n",
              "      <th>gender_Male</th>\n",
              "      <th>Partner_Yes</th>\n",
              "      <th>Dependents_Yes</th>\n",
              "      <th>PhoneService_Yes</th>\n",
              "      <th>InternetService_Fiber optic</th>\n",
              "      <th>InternetService_No</th>\n",
              "      <th>OnlineSecurity_No internet service</th>\n",
              "      <th>OnlineSecurity_Yes</th>\n",
              "      <th>OnlineBackup_No internet service</th>\n",
              "      <th>OnlineBackup_Yes</th>\n",
              "      <th>DeviceProtection_No internet service</th>\n",
              "      <th>DeviceProtection_Yes</th>\n",
              "      <th>TechSupport_No internet service</th>\n",
              "      <th>TechSupport_Yes</th>\n",
              "      <th>StreamingTV_No internet service</th>\n",
              "      <th>StreamingTV_Yes</th>\n",
              "      <th>StreamingMovies_No internet service</th>\n",
              "      <th>StreamingMovies_Yes</th>\n",
              "      <th>Contract_One year</th>\n",
              "      <th>Contract_Two year</th>\n",
              "      <th>PaperlessBilling_Yes</th>\n",
              "      <th>PaymentMethod_Credit card (automatic)</th>\n",
              "      <th>PaymentMethod_Electronic check</th>\n",
              "      <th>PaymentMethod_Mailed check</th>\n",
              "      <th>Churn_Yes</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>29.85</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>34</td>\n",
              "      <td>56.95</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>53.85</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>45</td>\n",
              "      <td>42.30</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>70.70</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7038</th>\n",
              "      <td>0</td>\n",
              "      <td>24</td>\n",
              "      <td>84.80</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7039</th>\n",
              "      <td>0</td>\n",
              "      <td>72</td>\n",
              "      <td>103.20</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7040</th>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>29.60</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7041</th>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>74.40</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7042</th>\n",
              "      <td>0</td>\n",
              "      <td>66</td>\n",
              "      <td>105.65</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>7043 rows × 28 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "      SeniorCitizen  tenure  ...  PaymentMethod_Mailed check  Churn_Yes\n",
              "0                 0       1  ...                           0          0\n",
              "1                 0      34  ...                           1          0\n",
              "2                 0       2  ...                           1          1\n",
              "3                 0      45  ...                           0          0\n",
              "4                 0       2  ...                           0          1\n",
              "...             ...     ...  ...                         ...        ...\n",
              "7038              0      24  ...                           1          0\n",
              "7039              0      72  ...                           0          0\n",
              "7040              0      11  ...                           0          0\n",
              "7041              1       4  ...                           1          1\n",
              "7042              0      66  ...                           0          0\n",
              "\n",
              "[7043 rows x 28 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "sIPTCN6NMWym",
        "outputId": "b66947c1-d9ab-416c-a265-d21c39c9c7ae"
      },
      "source": [
        "plt.figure(figsize=(12,6))\n",
        "# графическая иллюстрация корреляционной матрицы\n",
        "sns.heatmap(telco_dmms.corr(), cmap='coolwarm')"
      ],
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f5ecb446750>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 61
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 355
        },
        "id": "m_3E94aDHEmr",
        "outputId": "c14e165e-9721-4d80-ec58-530ec9b0e6b3"
      },
      "source": [
        "plt.figure(figsize=(12,6))\n",
        "# отбираем определенные 4 переменные\n",
        "sns.heatmap(\n",
        "    telco_dmms[['MonthlyCharges','tenure','Dependents_Yes','Partner_Yes']].corr(),\n",
        "    annot=True, cmap='coolwarm', linewidth=3, linecolor='black')"
      ],
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f5ec98e7dd0>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 66
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "J1DYdZnCONfp"
      },
      "source": [
        "from sklearn.linear_model import LogisticRegression"
      ],
      "execution_count": 67,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BBiKEKv1ONcM"
      },
      "source": [
        "from sklearn.model_selection import train_test_split"
      ],
      "execution_count": 68,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zGj4YiQNO1PR"
      },
      "source": [
        "# выделям признака\n",
        "X = telco_dmms.drop(labels=['Churn_Yes'], axis=1)\n",
        "# выделяем целевой вектор\n",
        "y = telco_dmms['Churn_Yes']"
      ],
      "execution_count": 69,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vKc9vM4aO1L0"
      },
      "source": [
        "# разделяем выборочную совокупность на тренировочное и тестовое множества\n",
        "# соотношение: 75 процентов = тренировочное множество\n",
        "# 25 процентов - тестовое множество\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, \n",
        "                                                    random_state=1)"
      ],
      "execution_count": 70,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vQVfz9mfO1Is",
        "outputId": "ead05ce9-253c-4ee9-bc81-086f7545b4de"
      },
      "source": [
        "# обучаем логистическую регрессию на тренировочном множестве\n",
        "log_reg = LogisticRegression().fit(X_train, y_train)"
      ],
      "execution_count": 71,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "Please also refer to the documentation for alternative solver options:\n",
            "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
            "  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rzdtz9z4PaLN",
        "outputId": "a1160ff9-b62e-41bf-c1b9-19d87b29eead"
      },
      "source": [
        "# определяем точность на тестовом множестве\n",
        "log_reg.score(X_test, y_test)"
      ],
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.8080636002271436"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 73
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qJ1R2CYQPaIx",
        "outputId": "7ef8a09e-8d9a-482c-fa41-fbc2717b8371"
      },
      "source": [
        "telco['Churn'].value_counts(normalize=True)"
      ],
      "execution_count": 74,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "No     0.73463\n",
              "Yes    0.26537\n",
              "Name: Churn, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 74
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Vm-56-U-QTeG"
      },
      "source": [
        "логистическая регрессия на 7 процентов точнее определяет отток по сравнению со случайным отбор клиентов"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5n76q8GPPZ_k"
      },
      "source": [
        "m207 = 'https://raw.githubusercontent.com/UrmatDzhunkeev/m_207/main/m207.csv'"
      ],
      "execution_count": 75,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kMmV9JXkTwPa"
      },
      "source": [
        "group = pd.read_csv(m207)"
      ],
      "execution_count": 76,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 521
        },
        "id": "Ihyu6mg4Ty4l",
        "outputId": "3817fb53-a64d-4b6c-87fa-2b431b52fc80"
      },
      "source": [
        "group"
      ],
      "execution_count": 77,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>number</th>\n",
              "      <th>student</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Гун Синьи</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Ли Сай</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Ли Тэнтэн</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Лю Цзиньцзэ</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Сото Веласкез Астрид</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>Сюй Юй</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>Тан Сиянь</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>У Пэйлинь</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>Цзинь Цютун</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>Чжао Цзицянь</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>Чжао Шэн</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>12</td>\n",
              "      <td>Чэн Чжэнсинь</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>13</td>\n",
              "      <td>Юй Чжимэн</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>14</td>\n",
              "      <td>Ян Хайцин</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>15</td>\n",
              "      <td>Ян Юй</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>16</td>\n",
              "      <td>Ян Юйцзяо</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    number               student\n",
              "0        1            Гун Синьи \n",
              "1        2               Ли Сай \n",
              "2        3            Ли Тэнтэн \n",
              "3        4          Лю Цзиньцзэ \n",
              "4        5  Сото Веласкез Астрид\n",
              "5        6               Сюй Юй \n",
              "6        7            Тан Сиянь \n",
              "7        8            У Пэйлинь \n",
              "8        9           Цзинь Цютун\n",
              "9       10          Чжао Цзицянь\n",
              "10      11             Чжао Шэн \n",
              "11      12          Чэн Чжэнсинь\n",
              "12      13            Юй Чжимэн \n",
              "13      14            Ян Хайцин \n",
              "14      15                Ян Юй \n",
              "15      16             Ян Юйцзяо"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 77
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CUwjUJfJbkn2"
      },
      "source": [
        "snsheatmaptelcodummiesmonthlychargesdependent"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mUvljSBgfPXh"
      },
      "source": [
        "def sns_bxptl_YY(dataframe, x_col, y_col):\n",
        "  plt.figure(figsize=(12,6))\n",
        "  sns.boxplot(data=dataframe, x=x_col, y=y_col)"
      ],
      "execution_count": 159,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 340
        },
        "id": "TetQj3vafTna",
        "outputId": "79f6adba-1754-4de7-9246-be53f1d5f2b8"
      },
      "source": [
        "sns_bxptl_YY(telco,'Dependents','MonthlyCharges')"
      ],
      "execution_count": 160,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xpU8Y39bfTdh"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eUIBi5q3bkR2"
      },
      "source": [
        "telco_dmms_CH_CH = pd.get_dummies(telco, drop_first=True)"
      ],
      "execution_count": 144,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "id": "IzhYr8LNbkPA",
        "outputId": "a3190981-0495-41d8-feb8-265b411b6c18"
      },
      "source": [
        "telco_dmms_CH_CH"
      ],
      "execution_count": 145,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>SeniorCitizen</th>\n",
              "      <th>tenure</th>\n",
              "      <th>MonthlyCharges</th>\n",
              "      <th>gender_Male</th>\n",
              "      <th>Partner_Yes</th>\n",
              "      <th>Dependents_Yes</th>\n",
              "      <th>PhoneService_Yes</th>\n",
              "      <th>InternetService_Fiber optic</th>\n",
              "      <th>InternetService_No</th>\n",
              "      <th>OnlineSecurity_No internet service</th>\n",
              "      <th>OnlineSecurity_Yes</th>\n",
              "      <th>OnlineBackup_No internet service</th>\n",
              "      <th>OnlineBackup_Yes</th>\n",
              "      <th>DeviceProtection_No internet service</th>\n",
              "      <th>DeviceProtection_Yes</th>\n",
              "      <th>TechSupport_No internet service</th>\n",
              "      <th>TechSupport_Yes</th>\n",
              "      <th>StreamingTV_No internet service</th>\n",
              "      <th>StreamingTV_Yes</th>\n",
              "      <th>StreamingMovies_No internet service</th>\n",
              "      <th>StreamingMovies_Yes</th>\n",
              "      <th>Contract_One year</th>\n",
              "      <th>Contract_Two year</th>\n",
              "      <th>PaperlessBilling_Yes</th>\n",
              "      <th>PaymentMethod_Credit card (automatic)</th>\n",
              "      <th>PaymentMethod_Electronic check</th>\n",
              "      <th>PaymentMethod_Mailed check</th>\n",
              "      <th>Churn_Yes</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>29.85</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>34</td>\n",
              "      <td>56.95</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>53.85</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>45</td>\n",
              "      <td>42.30</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>70.70</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7038</th>\n",
              "      <td>0</td>\n",
              "      <td>24</td>\n",
              "      <td>84.80</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7039</th>\n",
              "      <td>0</td>\n",
              "      <td>72</td>\n",
              "      <td>103.20</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7040</th>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>29.60</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7041</th>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>74.40</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7042</th>\n",
              "      <td>0</td>\n",
              "      <td>66</td>\n",
              "      <td>105.65</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>7043 rows × 28 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "      SeniorCitizen  tenure  ...  PaymentMethod_Mailed check  Churn_Yes\n",
              "0                 0       1  ...                           0          0\n",
              "1                 0      34  ...                           1          0\n",
              "2                 0       2  ...                           1          1\n",
              "3                 0      45  ...                           0          0\n",
              "4                 0       2  ...                           0          1\n",
              "...             ...     ...  ...                         ...        ...\n",
              "7038              0      24  ...                           1          0\n",
              "7039              0      72  ...                           0          0\n",
              "7040              0      11  ...                           0          0\n",
              "7041              1       4  ...                           1          1\n",
              "7042              0      66  ...                           0          0\n",
              "\n",
              "[7043 rows x 28 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 145
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QZ59p9qKeqJf",
        "outputId": "ee231788-4c3d-4580-9dd0-5d2ca3c4f3dc"
      },
      "source": [
        "telco['Churn'].value_counts(normalize=True)"
      ],
      "execution_count": 155,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "No     0.73463\n",
              "Yes    0.26537\n",
              "Name: Churn, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 155
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mjt8qV5DeztQ"
      },
      "source": [
        "log_reg"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 136
        },
        "id": "eJ82S8bpezqA",
        "outputId": "dad7bfba-7740-461f-91be-c76ca9b7fe09"
      },
      "source": [
        "telco.corr()"
      ],
      "execution_count": 156,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>SeniorCitizen</th>\n",
              "      <th>tenure</th>\n",
              "      <th>MonthlyCharges</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>SeniorCitizen</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.016567</td>\n",
              "      <td>0.220173</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>tenure</th>\n",
              "      <td>0.016567</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.247900</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MonthlyCharges</th>\n",
              "      <td>0.220173</td>\n",
              "      <td>0.247900</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                SeniorCitizen    tenure  MonthlyCharges\n",
              "SeniorCitizen        1.000000  0.016567        0.220173\n",
              "tenure               0.016567  1.000000        0.247900\n",
              "MonthlyCharges       0.220173  0.247900        1.000000"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 156
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 166
        },
        "id": "PhdVziBxezl1",
        "outputId": "cedd20b9-4299-475a-9b65-396ccfaa6971"
      },
      "source": [
        "telco_dmms[['SeniorCitizen','tenure','MonthlyCharges','gender_Male']].corr()"
      ],
      "execution_count": 161,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>SeniorCitizen</th>\n",
              "      <th>tenure</th>\n",
              "      <th>MonthlyCharges</th>\n",
              "      <th>gender_Male</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>SeniorCitizen</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.016567</td>\n",
              "      <td>0.220173</td>\n",
              "      <td>-0.001874</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>tenure</th>\n",
              "      <td>0.016567</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.247900</td>\n",
              "      <td>0.005106</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MonthlyCharges</th>\n",
              "      <td>0.220173</td>\n",
              "      <td>0.247900</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.014569</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>gender_Male</th>\n",
              "      <td>-0.001874</td>\n",
              "      <td>0.005106</td>\n",
              "      <td>-0.014569</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                SeniorCitizen    tenure  MonthlyCharges  gender_Male\n",
              "SeniorCitizen        1.000000  0.016567        0.220173    -0.001874\n",
              "tenure               0.016567  1.000000        0.247900     0.005106\n",
              "MonthlyCharges       0.220173  0.247900        1.000000    -0.014569\n",
              "gender_Male         -0.001874  0.005106       -0.014569     1.000000"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 161
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eKWqnTnieqE1"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 480
        },
        "id": "EbcHGerXbkMM",
        "outputId": "4276ac4c-ff17-4d67-97bb-e8dd4154efc8"
      },
      "source": [
        "sns.heatmap(telco_dmms.corr())"
      ],
      "execution_count": 146,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f5ec6058890>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 146
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "phy1HsnKdpeO",
        "outputId": "76cefdde-f06e-4dc5-d4ea-7a6f0e97751f"
      },
      "source": [
        "log_reg_G_S = LogisticRegression().fit(X_train, y_train)"
      ],
      "execution_count": 153,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "Please also refer to the documentation for alternative solver options:\n",
            "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
            "  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DZK07CIFeB50",
        "outputId": "49c45182-4f35-472d-84a9-aefec3add8af"
      },
      "source": [
        "log_reg.score(X_test,y_test)"
      ],
      "execution_count": 154,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.8080636002271436"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 154
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rdXjtueceB0g"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2ItYGVOTdo74"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "I4rTfkNpdDkd"
      },
      "source": [
        "X_S_YU = telco_dmms.drop(labels='Churn_Yes', axis=1)"
      ],
      "execution_count": 150,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "id": "Rlp5RM2odDiD",
        "outputId": "c63a42a9-f23a-4391-86ed-624d940e18c6"
      },
      "source": [
        "X_S_YU"
      ],
      "execution_count": 148,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>SeniorCitizen</th>\n",
              "      <th>tenure</th>\n",
              "      <th>MonthlyCharges</th>\n",
              "      <th>gender_Male</th>\n",
              "      <th>Partner_Yes</th>\n",
              "      <th>Dependents_Yes</th>\n",
              "      <th>PhoneService_Yes</th>\n",
              "      <th>InternetService_Fiber optic</th>\n",
              "      <th>InternetService_No</th>\n",
              "      <th>OnlineSecurity_No internet service</th>\n",
              "      <th>OnlineSecurity_Yes</th>\n",
              "      <th>OnlineBackup_No internet service</th>\n",
              "      <th>OnlineBackup_Yes</th>\n",
              "      <th>DeviceProtection_No internet service</th>\n",
              "      <th>DeviceProtection_Yes</th>\n",
              "      <th>TechSupport_No internet service</th>\n",
              "      <th>TechSupport_Yes</th>\n",
              "      <th>StreamingTV_No internet service</th>\n",
              "      <th>StreamingTV_Yes</th>\n",
              "      <th>StreamingMovies_No internet service</th>\n",
              "      <th>StreamingMovies_Yes</th>\n",
              "      <th>Contract_One year</th>\n",
              "      <th>Contract_Two year</th>\n",
              "      <th>PaperlessBilling_Yes</th>\n",
              "      <th>PaymentMethod_Credit card (automatic)</th>\n",
              "      <th>PaymentMethod_Electronic check</th>\n",
              "      <th>PaymentMethod_Mailed check</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>29.85</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>34</td>\n",
              "      <td>56.95</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>53.85</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>45</td>\n",
              "      <td>42.30</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>70.70</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7038</th>\n",
              "      <td>0</td>\n",
              "      <td>24</td>\n",
              "      <td>84.80</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7039</th>\n",
              "      <td>0</td>\n",
              "      <td>72</td>\n",
              "      <td>103.20</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7040</th>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>29.60</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7041</th>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>74.40</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7042</th>\n",
              "      <td>0</td>\n",
              "      <td>66</td>\n",
              "      <td>105.65</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>7043 rows × 27 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "      SeniorCitizen  ...  PaymentMethod_Mailed check\n",
              "0                 0  ...                           0\n",
              "1                 0  ...                           1\n",
              "2                 0  ...                           1\n",
              "3                 0  ...                           0\n",
              "4                 0  ...                           0\n",
              "...             ...  ...                         ...\n",
              "7038              0  ...                           1\n",
              "7039              0  ...                           0\n",
              "7040              0  ...                           0\n",
              "7041              1  ...                           1\n",
              "7042              0  ...                           0\n",
              "\n",
              "[7043 rows x 27 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 148
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "J9xZBVLLdDey"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9nQYUNbcdDaz"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2_BAoLEtbkJK"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8fWD6cXYbkF5"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KfKfxbKaaNSN"
      },
      "source": [
        "def plot_hist_TT(dataframe, group_col, value_col, dnst=False):\n",
        "  plt.figure(figsize=(12,6))\n",
        "  dataframe.groupby(group_col)[value_col].plot(kind='hist',density=dnst,\n",
        "                                               histtype='step',\n",
        "                                               linewidth=5,\n",
        "                                               legend=True)"
      ],
      "execution_count": 140,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 328
        },
        "id": "aY1toZ_daNPP",
        "outputId": "2d46d1d1-de49-4f0f-ce10-33006bc861ab"
      },
      "source": [
        "plot_hist_TT(telco, 'Dependents','MonthlyCharges')"
      ],
      "execution_count": 141,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SjNIBOvdaNMz"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bFyHIzsZZnWH"
      },
      "source": [
        "def sns_bxptl_L_TT(dataframe, x_col, y_col):\n",
        "  plt.figure(figsize=(12,6))\n",
        "  sns.boxplot(data=dataframe, x=x_col, y=y_col)"
      ],
      "execution_count": 138,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 340
        },
        "id": "HqKzhcw8aBvX",
        "outputId": "89820ba1-5e40-4d98-f085-e7d243f56e9e"
      },
      "source": [
        "sns_bxptl_L_TT(telco, 'Partner','MonthlyCharges')"
      ],
      "execution_count": 139,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8EcGm2URZnS6"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6TybyhihZm5X"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "C6D20nOgZmxw"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Cuwa63lgZmsU"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 77
        },
        "id": "rpGdQr_eVIrZ",
        "outputId": "f74d6caf-9f49-4a95-87a8-a0134999b6d9"
      },
      "source": [
        "group.sample(n=1)"
      ],
      "execution_count": 124,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>number</th>\n",
              "      <th>student</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Сото Веласкез Астрид</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   number               student\n",
              "4       5  Сото Веласкез Астрид"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 124
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SQWs4MeHTU_b"
      },
      "source": [
        "def rnd_student(num_answer):\n",
        "  group = pd.read_csv(m207)\n",
        "  np.random.seed(2)\n",
        "  randn_integer = np.random.randint(low=1, high=17, size=16)\n",
        "  randn_student = group.loc[randn_integer[num_answer],:]\n",
        "  return randn_student"
      ],
      "execution_count": 106,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oZAE4k_lTU9J",
        "outputId": "13380f16-1882-428d-8e4f-72f67c3bea4f"
      },
      "source": [
        "rnd_student()"
      ],
      "execution_count": 110,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "number              8\n",
              "student    У Пэйлинь \n",
              "Name: 7, dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 110
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WdrIfvJ4TU4E"
      },
      "source": [
        "def pvt_tbl_U_PL(dataframe, index_col, value_col, column_feat=None,\n",
        "            aggfunc=['mean']):\n",
        "  return dataframe.pivot_table(index=index_col, values=value_col,\n",
        "                        aggfunc=aggfunc, columns=column_feat)\n"
      ],
      "execution_count": 130,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 166
        },
        "id": "mL-Doe4HVf3g",
        "outputId": "10168348-70bb-44d3-ee4f-ccc47ba75021"
      },
      "source": [
        "pvt_tbl_U_PL(dataframe=telco, index_col='SeniorCitizen',\n",
        "             value_col='MonthlyCharges')"
      ],
      "execution_count": 131,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr:last-of-type th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>mean</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>MonthlyCharges</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SeniorCitizen</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>61.847441</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>79.820359</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                        mean\n",
              "              MonthlyCharges\n",
              "SeniorCitizen               \n",
              "0                  61.847441\n",
              "1                  79.820359"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 131
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 134
        },
        "id": "yn7hni1bVf03",
        "outputId": "9dd7be67-423f-4ac1-f977-dd5a3b6c0e21"
      },
      "source": [
        "# Чжао Шэн\n",
        "telco['gender'].value_counts(normalize=True)].plot(kind='bar') "
      ],
      "execution_count": 136,
      "outputs": [
        {
          "output_type": "error",
          "ename": "SyntaxError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-136-6c5554f70714>\"\u001b[0;36m, line \u001b[0;32m2\u001b[0m\n\u001b[0;31m    telco['gender'].value_counts(normalize=True)].plot(kind='bar')\u001b[0m\n\u001b[0m                                                ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fVE9ZQz9VfyG"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "D6QPLxusZAxN"
      },
      "source": [
        "# 'gender' - "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "dSMycWU6ZAuw",
        "outputId": "5d23d5a8-3a8f-4acd-a8c4-71b1da88efea"
      },
      "source": [
        "for feature in ['gender','Dependents','SeniorCitizen','Partner']:\n",
        "  bar_vl_cnt(telco,feature)\n",
        "  plt.title(feature)\n",
        "  plt.show()"
      ],
      "execution_count": 137,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXQAAAEFCAYAAADzHRw3AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAARvElEQVR4nO3de5Cdd13H8feHMPFWqEhXhFyaCKkYFKmuwQFERmFIARNHbomXsYBEZowX6ChBMYPBC+AFLxNHIjIgMzTUzqgrXQheqIpazCK1msbAToQmEWEpLYggbcrXP85TPJzuZp+kZ3OaX9+vmTN5fpfzPN+T7Hzy7HM5T6oKSdKF7wGTLkCSNB4GuiQ1wkCXpEYY6JLUCANdkhphoEtSIwx0NSfJDyZ596TWn+Q7kxxbqe1LS4nXoWuSkjwJeB3wGOAu4Cjw01V1eMJ1PR34eeBy4H+Bm4HfqKqZReYWsKmq5s9vldKXcg9dE5PkwcA7gN8FvgZYA/wi8PkJ1ZMkD0jyHOCPgT8C1gIPA/YC3zuJuqS+DHRN0mUAVXV1Vd1VVZ+rqndX1U0ASV6Y5GiS25IcSnLp3W9MUklekuRDSW5Psj9JurErk7x3aO4TkhxO8qnuzycMjV2f5JeT/D3wWeCRwG8Cr66qN1bVp6rqC1X1N1X14tH1J/nbblX/kuQzSZ6f5ClJTnbjz+/67359Psn13diXJfn1JLck+ViS30/yFd3YU5KcTHJVko8n+WiSF6zMP4NaYaBrkj4I3JXkLUmuSPKQuweSbAd+Dvh+YAr4O+Dqkfc/C/h24LHA84Cnj24gydcA1wG/AzyUQVhfl+ShQ9N+GNgFPAj4cmAdcG2fD1BVT+4Wv6WqLqqqt4+Mv73rvwh4BHB86HO8hsF/ao8DHsXgN5S9Q2//OuDirv9FwP7hvyNplIGuiamqTwNPAgr4A2AhyUyShwEvAX61qo5W1WngV4DHDe+lA6+pqtur6hbgPQyCcdQzgQ9V1Vur6nRVXQ38O196+OTNVXWk286Du76PjvOzJnkA8Dbg+qp6Q/fbxC7gpVX1yar67+4z7hh6253Avqq6s6pmgc8A3zDOutQWA10T1QX2lVW1FvgmBnuxvwVcCvx2dzjlduCTQBjsrd7tv4aWPwtctMgmHgF8ZKTvIyPrOTG0fGv358PP9rMs45cZ/Abwk117CvhK4P1Dn/FdXf8Xa+n+k7nbUp9RAgx03YdU1b8Db2YQ7CeAH6uqrx56fUVV/cNZrvY/GfznMGw9cGp400PLx7ptP/sst7OkJDuAncBzqurOrvsTwOeAxwx9vou7QzPSOTHQNTFJHt2d9FvbtdcxCL4bgN8HXpHkMd3YxUmeew6bmQUuS/IDSR6Y5PnAZgZX19xDDa7jfRnwC0lekOTB3ZUvT0pyYIltfAz4+iU+4+UMruL5vqpaGNrOFxgcZnp9kq/t5q7pLpeUzomBrkn6b+DxwPuS/A+DIP834Kqq+hPgtcDBJJ/u+q842w1U1a0MTp5exeBwys8Cz6qqT5zhPdcCzwdeyGAP/2PALwF/tsRbXgW8pTt08ryRse3AQ4D3Dl3p8s5u7OXAPHBD9xn/Eo+R617wxiJJaoR76JLUCANdkhphoEtSIwx0SWqEgS5JjXjgpDZ8ySWX1IYNGya1eUm6IL3//e//RFVNLTY2sUDfsGEDc3Nzk9q8JF2Qkox+lcUXechFkhphoEtSIwx0SWqEgS5JjTDQJakRBrokNcJAl6RGGOiS1IiJ3Vh0odiw57pJl9CUD7/mmZMuQWqWe+iS1AgDXZIaYaBLUiMMdElqhIEuSY3oFehJtiY5lmQ+yZ5FxtcneU+SDyS5Kckzxl+qJOlMlg30JKuA/cAVwGZgZ5LNI9NeCVxTVZcDO4DfG3ehkqQz67OHvgWYr6rjVXUHcBDYPjKngAd3yxcD/zm+EiVJffS5sWgNcGKofRJ4/MicVwHvTvITwFcBTx1LdZKk3sZ1UnQn8OaqWgs8A3hrknusO8muJHNJ5hYWFsa0aUkS9Av0U8C6ofbarm/Yi4BrAKrqH4EvBy4ZXVFVHaiq6aqanppa9BmnkqRz1CfQDwObkmxMsprBSc+ZkTm3AN8DkOQbGQS6u+CSdB4tG+hVdRrYDRwCjjK4muVIkn1JtnXTrgJenORfgKuBK6uqVqpoSdI99fq2xaqaBWZH+vYOLd8MPHG8pUmSzoZ3ikpSIwx0SWqEgS5JjTDQJakRBrokNcJAl6RGGOiS1AgDXZIaYaBLUiMMdElqhIEuSY0w0CWpEQa6JDXCQJekRhjoktQIA12SGtEr0JNsTXIsyXySPYuMvz7Jjd3rg0luH3+pkqQzWfaJRUlWAfuBpwEngcNJZrqnFAFQVS8dmv8TwOUrUKsk6Qz67KFvAear6nhV3QEcBLafYf5OBs8VlSSdR30CfQ1wYqh9suu7hySXAhuBv15ifFeSuSRzCwsLZ1urJOkMxn1SdAdwbVXdtdhgVR2oqumqmp6amhrzpiXp/q1PoJ8C1g2113Z9i9mBh1skaSL6BPphYFOSjUlWMwjtmdFJSR4NPAT4x/GWKEnqY9lAr6rTwG7gEHAUuKaqjiTZl2Tb0NQdwMGqqpUpVZJ0JstetghQVbPA7Ejf3pH2q8ZXliTpbHmnqCQ1wkCXpEYY6JLUCANdkhphoEtSIwx0SWqEgS5JjTDQJakRBrokNcJAl6RGGOiS1AgDXZIaYaBLUiMMdElqhIEuSY3oFehJtiY5lmQ+yZ4l5jwvyc1JjiR523jLlCQtZ9kHXCRZBewHngacBA4nmamqm4fmbAJeATyxqm5L8rUrVbAkaXF99tC3APNVdbyq7gAOAttH5rwY2F9VtwFU1cfHW6YkaTl9An0NcGKofbLrG3YZcFmSv09yQ5Kt4ypQktRPr2eK9lzPJuApwFrgb5N8c1XdPjwpyS5gF8D69evHtGlJEvTbQz8FrBtqr+36hp0EZqrqzqr6D+CDDAL+S1TVgaqarqrpqampc61ZkrSIPoF+GNiUZGOS1cAOYGZkzp8y2DsnySUMDsEcH2OdkqRlLBvoVXUa2A0cAo4C11TVkST7kmzrph0Cbk1yM/Ae4Geq6taVKlqSdE+9jqFX1SwwO9K3d2i5gJd1L0nSBHinqCQ1wkCXpEYY6JLUCANdkhphoEtSIwx0SWqEgS5JjTDQJakRBrokNcJAl6RGGOiS1AgDXZIaYaBLUiMMdElqhIEuSY0w0CWpEb0CPcnWJMeSzCfZs8j4lUkWktzYvX50/KVKks5k2ScWJVkF7AeexuBh0IeTzFTVzSNT315Vu1egRklSD3320LcA81V1vKruAA4C21e2LEnS2eoT6GuAE0Ptk13fqGcnuSnJtUnWjaU6SVJv4zop+ufAhqp6LPAXwFsWm5RkV5K5JHMLCwtj2rQkCfoF+ilgeI97bdf3RVV1a1V9vmu+Efi2xVZUVQeqarqqpqemps6lXknSEvoE+mFgU5KNSVYDO4CZ4QlJHj7U3AYcHV+JkqQ+lr3KpapOJ9kNHAJWAW+qqiNJ9gFzVTUD/GSSbcBp4JPAlStYsyRpEcsGOkBVzQKzI317h5ZfAbxivKVJks6Gd4pKUiMMdElqhIEuSY0w0CWpEQa6JDXCQJekRhjoktQIA12SGmGgS1IjDHRJaoSBLkmNMNAlqREGuiQ1wkCXpEYY6JLUCANdkhrRK9CTbE1yLMl8kj1nmPfsJJVkenwlSpL6WDbQk6wC9gNXAJuBnUk2LzLvQcBPAe8bd5GSpOX12UPfAsxX1fGqugM4CGxfZN6rgdcC/zvG+iRJPfUJ9DXAiaH2ya7vi5J8K7Cuqq4bY22SpLNwr0+KJnkA8JvAVT3m7koyl2RuYWHh3m5akjSkT6CfAtYNtdd2fXd7EPBNwPVJPgx8BzCz2InRqjpQVdNVNT01NXXuVUuS7qFPoB8GNiXZmGQ1sAOYuXuwqj5VVZdU1Yaq2gDcAGyrqrkVqViStKhlA72qTgO7gUPAUeCaqjqSZF+SbStdoCSpnwf2mVRVs8DsSN/eJeY+5d6XJUk6W94pKkmNMNAlqREGuiQ1wkCXpEYY6JLUCANdkhphoEtSIwx0SWqEgS5JjTDQJakRBrokNcJAl6RGGOiS1AgDXZIaYaBLUiN6BXqSrUmOJZlPsmeR8Zck+dckNyZ5b5LN4y9VknQmywZ6klXAfuAKYDOwc5HAfltVfXNVPQ54HYOHRkuSzqM+e+hbgPmqOl5VdwAHge3DE6rq00PNrwJqfCVKkvro8wi6NcCJofZJ4PGjk5L8OPAyYDXw3WOpTpLU29hOilbV/qp6JPBy4JWLzUmyK8lckrmFhYVxbVqSRL9APwWsG2qv7fqWchD4vsUGqupAVU1X1fTU1FT/KiVJy+oT6IeBTUk2JlkN7ABmhick2TTUfCbwofGVKEnqY9lj6FV1Oslu4BCwCnhTVR1Jsg+Yq6oZYHeSpwJ3ArcBP7KSRUuS7qnPSVGqahaYHenbO7T8U2OuS5J0lrxTVJIaYaBLUiMMdElqhIEuSY0w0CWpEQa6JDXCQJekRhjoktQIA12SGmGgS1IjDHRJaoSBLkmNMNAlqREGuiQ1wkCXpEYY6JLUiF6BnmRrkmNJ5pPsWWT8ZUluTnJTkr9Kcun4S5UkncmygZ5kFbAfuALYDOxMsnlk2geA6ap6LHAt8LpxFypJOrM+e+hbgPmqOl5VdwAHge3DE6rqPVX12a55A7B2vGVKkpbTJ9DXACeG2ie7vqW8CHjnvSlKknT2ej0kuq8kPwRMA9+1xPguYBfA+vXrx7lpSbrf67OHfgpYN9Re2/V9iSRPBX4e2FZVn19sRVV1oKqmq2p6amrqXOqVJC2hT6AfBjYl2ZhkNbADmBmekORy4A0Mwvzj4y9TkrScZQO9qk4Du4FDwFHgmqo6kmRfkm3dtF8DLgL+OMmNSWaWWJ0kaYX0OoZeVbPA7Ejf3qHlp465LknSWfJOUUlqhIEuSY0w0CWpEQa6JDVirDcWSTp/Nuy5btIlNOXDr3nmpEu419xDl6RGGOiS1AgDXZIaYaBLUiMMdElqhIEuSY0w0CWpEQa6JDXCQJekRhjoktQIA12SGtEr0JNsTXIsyXySPYuMPznJPyc5neQ54y9TkrScZQM9ySpgP3AFsBnYmWTzyLRbgCuBt427QElSP32+bXELMF9VxwGSHAS2AzffPaGqPtyNfWEFapQk9dDnkMsa4MRQ+2TXJ0m6DzmvJ0WT7Eoyl2RuYWHhfG5akprXJ9BPAeuG2mu7vrNWVQeqarqqpqemps5lFZKkJfQJ9MPApiQbk6wGdgAzK1uWJOlsLRvoVXUa2A0cAo4C11TVkST7kmwDSPLtSU4CzwXekOTIShYtSbqnXs8UrapZYHakb+/Q8mEGh2IkSRPinaKS1AgDXZIaYaBLUiMMdElqhIEuSY0w0CWpEQa6JDXCQJekRhjoktQIA12SGmGgS1IjDHRJaoSBLkmNMNAlqREGuiQ1wkCXpEb0CvQkW5McSzKfZM8i41+W5O3d+PuSbBh3oZKkM1s20JOsAvYDVwCbgZ1JNo9MexFwW1U9Cng98NpxFypJOrM+e+hbgPmqOl5VdwAHge0jc7YDb+mWrwW+J0nGV6YkaTl9nim6Bjgx1D4JPH6pOVV1OsmngIcCnxielGQXsKtrfibJsXMpWou6hJG/7/ui+Lvb/ZE/m+N16VIDvR4SPS5VdQA4cD63eX+RZK6qpiddhzTKn83zp88hl1PAuqH22q5v0TlJHghcDNw6jgIlSf30CfTDwKYkG5OsBnYAMyNzZoAf6ZafA/x1VdX4ypQkLWfZQy7dMfHdwCFgFfCmqjqSZB8wV1UzwB8Cb00yD3ySQejr/PJQlu6r/Nk8T+KOtCS1wTtFJakRBrokNcJAl6RGnNfr0DUeSR7N4O7cNV3XKWCmqo5OripJk+Ye+gUmycsZfP1CgH/qXgGuXuyL06T7iiQvmHQNrfMqlwtMkg8Cj6mqO0f6VwNHqmrTZCqTzizJLVW1ftJ1tMxDLheeLwCPAD4y0v/wbkyamCQ3LTUEPOx81nJ/ZKBfeH4a+KskH+L/vzRtPfAoYPfEqpIGHgY8HbhtpD/AP5z/cu5fDPQLTFW9K8llDL7WePik6OGqumtylUkAvAO4qKpuHB1Icv35L+f+xWPoktQIr3KRpEYY6JLUCANdkhphoEtSIwx0SWrE/wGPe8h2txlSoQAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UtCaTvb7ZArw"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SY-rdM2lZAo2"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oiaiIF0HZAmJ"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gWTdNRg4Vfvj"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "42mGK6i3G2hR"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}